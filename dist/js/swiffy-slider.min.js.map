{
  "version": 3,
  "sources": ["../../src/swiffy-slider.js"],
  "sourcesContent": ["const swiffyslider = function() {\n    return {\n        version: \"1.6.0\",\n        init(rootElement = document.body) {\n            rootElement.querySelectorAll(\".swiffy-slider\").forEach(sliderElement => this.initSlider(sliderElement));\n        },\n\n        initSlider(sliderElement) {\n            sliderElement.querySelectorAll(\".slider-nav\").forEach(navElement =>\n                navElement.addEventListener(\"click\", () => this.slide(sliderElement, navElement.classList.contains(\"slider-nav-next\")), { passive: true })\n            );\n            sliderElement.querySelectorAll(\".slider-indicators\").forEach((indicatorElement) => {\n                indicatorElement.addEventListener(\"click\", () => this.slideToByIndicator());\n                this.onSlideEnd(sliderElement, () => this.handleIndicators(sliderElement), 60);\n            });\n            if (sliderElement.classList.contains(\"slider-nav-autoplay\")) {\n                const timeout = sliderElement.getAttribute(\"data-slider-nav-autoplay-interval\") ? sliderElement.getAttribute(\"data-slider-nav-autoplay-interval\") : 2500;\n                this.autoPlay(sliderElement, timeout, sliderElement.classList.contains(\"slider-nav-autopause\"));\n            }\n            if ([\"slider-nav-autohide\", \"slider-nav-animation\"].some(className => sliderElement.classList.contains(className))) {\n                const threshold = sliderElement.getAttribute(\"data-slider-nav-animation-threshold\") ? sliderElement.getAttribute(\"data-slider-nav-animation-threshold\") : 0.3;\n                this.setVisibleSlides(sliderElement, threshold);\n            }\n        },\n\n        setVisibleSlides(sliderElement, threshold = 0.3) {\n            const container = sliderElement.querySelector(\".slider-container\");\n            const rootMargin = container.getAttribute(\"data-root-margin\") ?? \"\";\n            let observer = new IntersectionObserver(slides => {\n                slides.forEach(slide => {\n                    slide.isIntersecting ? slide.target.classList.add(\"slide-visible\") : slide.target.classList.remove(\"slide-visible\");\n                });\n                sliderElement.querySelector(\".slider-container>*:first-child\").classList.contains(\"slide-visible\") ? sliderElement.classList.add(\"slider-item-first-visible\") : sliderElement.classList.remove(\"slider-item-first-visible\");\n                sliderElement.querySelector(\".slider-container>*:last-child\").classList.contains(\"slide-visible\") ? sliderElement.classList.add(\"slider-item-last-visible\") : sliderElement.classList.remove(\"slider-item-last-visible\");\n            }, {\n                root: container,\n                threshold: threshold,\n                rootMargin: validateRootMargin(rootMargin) ? rootMargin : ''\n            });\n            sliderElement.querySelectorAll(\".slider-container>*\").forEach(slide => observer.observe(slide));\n        },\n\n        slide(sliderElement, next = true) {\n            const container = sliderElement.querySelector(\".slider-container\");\n            const fullpage = sliderElement.classList.contains(\"slider-nav-page\");\n            const noloop = sliderElement.classList.contains(\"slider-nav-noloop\");\n            const nodelay = sliderElement.classList.contains(\"slider-nav-nodelay\");\n            const slides = container.children;\n            const gapWidth = parseInt(window.getComputedStyle(container).columnGap);\n            const scrollStep = slides[0].offsetWidth + gapWidth;\n            let scrollLeftPosition = next ?\n                container.scrollLeft + scrollStep :\n                container.scrollLeft - scrollStep;\n            if (fullpage) {\n                scrollLeftPosition = next ?\n                    container.scrollLeft + container.offsetWidth :\n                    container.scrollLeft - container.offsetWidth;\n            }\n            if (container.scrollLeft < 1 && !next && !noloop)\n                scrollLeftPosition = (container.scrollWidth - container.offsetWidth);\n            if (container.scrollLeft >= (container.scrollWidth - container.offsetWidth) && next && !noloop)\n                scrollLeftPosition = 0;\n            container.scroll({\n                left: scrollLeftPosition,\n                behavior: nodelay ? \"auto\" : \"smooth\"\n            });\n        },\n\n        slideToByIndicator() {\n            const indicator = window.event.target;\n            const indicatorIndex = Array.from(indicator.parentElement.children).indexOf(indicator);\n            const indicatorCount = indicator.parentElement.children.length;\n            const sliderElement = indicator.closest(\".swiffy-slider\");\n            const slideCount = sliderElement.querySelector(\".slider-container\").children.length;\n            const relativeSlideIndex = (slideCount / indicatorCount) * indicatorIndex;\n            this.slideTo(sliderElement, relativeSlideIndex);\n        },\n\n        slideTo(sliderElement, slideIndex) {\n            const container = sliderElement.querySelector(\".slider-container\");\n            const gapWidth = parseInt(window.getComputedStyle(container).columnGap);\n            const scrollStep = container.children[0].offsetWidth + gapWidth;\n            const nodelay = sliderElement.classList.contains(\"slider-nav-nodelay\");\n            container.scroll({\n                left: (scrollStep * slideIndex),\n                behavior: nodelay ? \"auto\" : \"smooth\"\n            });\n        },\n\n        onSlideEnd(sliderElement, delegate, timeout = 125) {\n            let isScrolling;\n            sliderElement.querySelector(\".slider-container\").addEventListener(\"scroll\", () => {\n                window.clearTimeout(isScrolling);\n                isScrolling = setTimeout(delegate, timeout);\n            }, { capture: false, passive: true });\n        },\n\n        autoPlay(sliderElement, timeout, autopause) {\n            timeout = timeout < 750 ? 750 : timeout;\n            let autoplayTimer = setInterval(() => this.slide(sliderElement), timeout);\n            const autoplayer = () => {\n                [\"mouseout\", \"touchend\"].forEach((event) => {\n                    sliderElement.removeEventListener(event, autoplayer);\n                });\n\n                this.autoPlay(sliderElement, timeout, autopause);\n            }\n            if (autopause) {\n                [\"mouseover\", \"touchstart\"].forEach((event) => {\n                    sliderElement.addEventListener(event, () => {\n                        window.clearTimeout(autoplayTimer);\n                    }, { once: true, passive: true });\n                });\n                [\"mouseout\", \"touchend\"].forEach((event) => {\n                    sliderElement.addEventListener(event, autoplayer, { once: true, passive: true });\n                });\n            }\n            return autoplayTimer;\n        },\n\n        handleIndicators(sliderElement) {\n            if (!sliderElement) return;\n            const container = sliderElement.querySelector(\".slider-container\");\n            const slidingAreaWidth = container.scrollWidth - container.offsetWidth;\n            const percentSlide = (container.scrollLeft / slidingAreaWidth);\n            sliderElement.querySelectorAll(\".slider-indicators\").forEach((scrollIndicatorContainers) => {\n                let scrollIndicators = scrollIndicatorContainers.children;\n                let activeIndicator = Math.abs(Math.round((scrollIndicators.length - 1) * percentSlide));\n                for (let element of scrollIndicators)\n                    element.classList.remove(\"active\");\n                scrollIndicators[activeIndicator].classList.add(\"active\");\n            });\n        }\n    };\n}();\n\nfunction validateRootMargin(value) {\n  if (typeof value !== 'string') return false;\n\n  const parts = value.trim().split(/\\s+/);\n  if (parts.length < 1 || parts.length > 4) return false;\n\n  const isValidUnit = (str) => /^-?\\d*\\.?\\d+(px|%)$/.test(str);\n\n  return parts.every(isValidUnit);\n}\n\nwindow.swiffyslider = swiffyslider;\nif (!document.currentScript.hasAttribute(\"data-noinit\")) {\n    if (document.currentScript.hasAttribute(\"defer\")) {\n        swiffyslider.init();\n    } else {\n        document.onreadystatechange = () => {\n            if (document.readyState === 'interactive') {\n                swiffyslider.init();\n            }\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["swiffyslider", "rootElement", "sliderElement", "navElement", "indicatorElement", "timeout", "className", "threshold", "container", "rootMargin", "observer", "slides", "slide", "validateRootMargin", "next", "fullpage", "noloop", "nodelay", "gapWidth", "scrollStep", "scrollLeftPosition", "indicator", "indicatorIndex", "indicatorCount", "relativeSlideIndex", "slideIndex", "delegate", "isScrolling", "autopause", "autoplayTimer", "autoplayer", "event", "slidingAreaWidth", "percentSlide", "scrollIndicatorContainers", "scrollIndicators", "activeIndicator", "element", "value", "parts", "isValidUnit", "str"]
}
