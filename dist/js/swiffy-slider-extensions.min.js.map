{
  "version": 3,
  "sources": ["../../src/swiffy-slider-extensions.js"],
  "sourcesContent": ["const swiffysliderextensions = function() {\n    return {\n        version: \"1.6.0\",\n        draggingtimer: null,\n        init(rootElement = document.body) {\n            rootElement.querySelectorAll(\".swiffy-slider\").forEach(sliderElement => this.initSlider(sliderElement));\n        },\n\n        initSlider(sliderElement) {\n            if (sliderElement.classList.contains(\"slider-nav-mousedrag\"))\n                sliderElement.addEventListener(\"mousedown\", (e) => this.handleMouseDrag(e, sliderElement), { passive: true });\n        },\n\n        handleMouseDrag(e, sliderElement) {\n            if (e.srcElement.classList.contains('slider-nav') || e.srcElement.parentElement.classList.contains('slider-indicators'))\n                return;\n\n            const container = sliderElement.querySelector(\".slider-container\");\n            if (sliderElement.classList.contains(\"dragging\")) {\n                clearTimeout(this.draggingtimer);\n            }\n            container.style.cursor = \"grabbing\";\n            sliderElement.classList.add(\"dragging\");\n\n            const startingLeftPos = container.scrollLeft;\n            const mouseDownStartingXPos = e.clientX;\n            const slideWidth = container.children[0].offsetWidth + parseInt(window.getComputedStyle(container).columnGap);\n            const maxLeftPosition = slideWidth * (container.children.length - 1);\n            const startLeftScroll = container.scrollLeft;\n            let nextSlideLeftPos = startLeftScroll;\n\n            const moveDelegate = (e) => {\n                const mouseMovedXpos = e.clientX - mouseDownStartingXPos;\n                const nextDraggingLeftPosition = startingLeftPos - (mouseMovedXpos * 1.8);\n\n                if (nextDraggingLeftPosition > 0 && nextDraggingLeftPosition <= maxLeftPosition) {\n                    container.scrollLeft = nextDraggingLeftPosition;\n                } else {\n                    return;\n                }\n                if (mouseMovedXpos < 0) {\n                    //Dragging from right to left\n                    if (maxLeftPosition <= startLeftScroll) {\n                        //Dragging right on last slide which is should not try to move the slides\n                        nextSlideLeftPos = startLeftScroll;\n                    } else {\n                        nextSlideLeftPos = container.scrollLeft + (slideWidth + (mouseMovedXpos * 1.8));\n                    }\n                } else {\n                    //Dragging from left to right\n                    if (startLeftScroll > 0) {\n                        nextSlideLeftPos = container.scrollLeft - (slideWidth - (mouseMovedXpos * 1.8));\n                    }\n                }\n            }\n\n            container.addEventListener('mousemove', moveDelegate, { passive: true });\n            document.addEventListener('mouseup', () => {\n                container.removeEventListener('mousemove', moveDelegate);\n                container.style.cursor = null;\n                if (nextSlideLeftPos < 0) { nextSlideLeftPos = 0; }\n                container.scroll({\n                    left: nextSlideLeftPos,\n                    behavior: \"smooth\"\n                });\n                this.draggingtimer = setTimeout(() => { sliderElement.classList.remove(\"dragging\"); }, 550);\n            }, { once: true, passive: true });\n        }\n    };\n}();\n\nwindow.swiffyslider.extensions = swiffysliderextensions;\nif (!document.currentScript.hasAttribute(\"data-noinit\")) {\n    window.addEventListener(\"load\", () => {\n        swiffyslider.extensions.init();\n    });\n}\n"],
  "mappings": "MAAA,IAAMA,EAAyB,UAAW,CACtC,MAAO,CACH,QAAS,QACT,cAAe,KACf,KAAKC,EAAc,SAAS,KAAM,CAC9BA,EAAY,iBAAiB,gBAAgB,EAAE,QAAQC,GAAiB,KAAK,WAAWA,CAAa,CAAC,CAC1G,EAEA,WAAWA,EAAe,CAClBA,EAAc,UAAU,SAAS,sBAAsB,GACvDA,EAAc,iBAAiB,YAAcC,GAAM,KAAK,gBAAgBA,EAAGD,CAAa,EAAG,CAAE,QAAS,EAAK,CAAC,CACpH,EAEA,gBAAgBC,EAAGD,EAAe,CAC9B,GAAIC,EAAE,WAAW,UAAU,SAAS,YAAY,GAAKA,EAAE,WAAW,cAAc,UAAU,SAAS,mBAAmB,EAClH,OAEJ,IAAMC,EAAYF,EAAc,cAAc,mBAAmB,EAC7DA,EAAc,UAAU,SAAS,UAAU,GAC3C,aAAa,KAAK,aAAa,EAEnCE,EAAU,MAAM,OAAS,WACzBF,EAAc,UAAU,IAAI,UAAU,EAEtC,IAAMG,EAAkBD,EAAU,WAC5BE,EAAwBH,EAAE,QAC1BI,EAAaH,EAAU,SAAS,CAAC,EAAE,YAAc,SAAS,OAAO,iBAAiBA,CAAS,EAAE,SAAS,EACtGI,EAAkBD,GAAcH,EAAU,SAAS,OAAS,GAC5DK,EAAkBL,EAAU,WAC9BM,EAAmBD,EAEjBE,EAAgBR,GAAM,CACxB,IAAMS,EAAiBT,EAAE,QAAUG,EAC7BO,EAA2BR,EAAmBO,EAAiB,IAErE,GAAIC,EAA2B,GAAKA,GAA4BL,EAC5DJ,EAAU,WAAaS,MAEvB,QAEAD,EAAiB,EAEbJ,GAAmBC,EAEnBC,EAAmBD,EAEnBC,EAAmBN,EAAU,YAAcG,EAAcK,EAAiB,KAI1EH,EAAkB,IAClBC,EAAmBN,EAAU,YAAcG,EAAcK,EAAiB,KAGtF,EAEAR,EAAU,iBAAiB,YAAaO,EAAc,CAAE,QAAS,EAAK,CAAC,EACvE,SAAS,iBAAiB,UAAW,IAAM,CACvCP,EAAU,oBAAoB,YAAaO,CAAY,EACvDP,EAAU,MAAM,OAAS,KACrBM,EAAmB,IAAKA,EAAmB,GAC/CN,EAAU,OAAO,CACb,KAAMM,EACN,SAAU,QACd,CAAC,EACD,KAAK,cAAgB,WAAW,IAAM,CAAER,EAAc,UAAU,OAAO,UAAU,CAAG,EAAG,GAAG,CAC9F,EAAG,CAAE,KAAM,GAAM,QAAS,EAAK,CAAC,CACpC,CACJ,CACJ,EAAE,EAEF,OAAO,aAAa,WAAaF,EAC5B,SAAS,cAAc,aAAa,aAAa,GAClD,OAAO,iBAAiB,OAAQ,IAAM,CAClC,aAAa,WAAW,KAAK,CACjC,CAAC",
  "names": ["swiffysliderextensions", "rootElement", "sliderElement", "e", "container", "startingLeftPos", "mouseDownStartingXPos", "slideWidth", "maxLeftPosition", "startLeftScroll", "nextSlideLeftPos", "moveDelegate", "mouseMovedXpos", "nextDraggingLeftPosition"]
}
